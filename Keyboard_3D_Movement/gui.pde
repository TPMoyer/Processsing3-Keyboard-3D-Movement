/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:434517:
  appc.background(230);
} //_CODE_:window1:434517:

public void option1_clicked1(GOption source, GEvent event) { //_CODE_:option1:618317:
  //println("option1 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set( -240.000,    0.000,   40.000,    radians(   0.000),   radians(   0.000),   radians(   0.000));
  ck.set( -24.000,    0.000,   0.000,    radians(   0.000),   radians(   0.000),   radians(   0.000));
  option1.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option1:618317:

public void option2_clicked1(GOption source, GEvent event) { //_CODE_:option2:985138:
  //println("option2 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set(  240.000,    0.000,   40.000,    radians(   0.000),   radians(   0.000),   radians( 180.000));
  ck.set(  24.000,    0.000,   0.000,    radians(   0.000),   radians(   0.000),   radians( 180.000));
  option2.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option2:985138:

public void option3_clicked1(GOption source, GEvent event) { //_CODE_:option3:459682:
  //println("option3 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set(    0.000, -240.000,   40.000,    radians(   0.000),   radians(   0.000),   radians(  90.000));
  ck.set(    0.000, -24.000,   0.000,    radians(   0.000),   radians(   0.000),   radians(  90.000));
  option3.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option3:459682:

public void option4_clicked1(GOption source, GEvent event) { //_CODE_:option4:648415:
  //println("option4 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set(    0.000,  240.000,   40.000,    radians(   0.000),   radians(   0.000),   radians( 270.000));
  ck.set(    0.000,  24.000,   0.000,    radians(   0.000),   radians(   0.000),   radians( 270.000));
  option4.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option4:648415:

public void option5_clicked1(GOption source, GEvent event) { //_CODE_:option5:828008:
  //println("option5 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set(   40.000,    0.000, -240.000,    radians(  90.000),   radians(   0.000),   radians(   0.000));
  ck.set(   0.000,    0.000, -24.000,    radians(  90.000),   radians(   0.000),   radians(   0.000));
  option5.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option5:828008:

public void option6_clicked1(GOption source, GEvent event) { //_CODE_:option6:508464:
  //println("option6 - GOption >> GEvent." + event + " @ " + millis());
  //ck.set(   40.000,    0.000,  240.000,    radians( -90.000),   radians(   0.000),   radians(   0.000));
  ck.set(   0.000,    0.000,  24.000,    radians( -90.000),   radians(   0.000),   radians(   0.000));
  option6.setSelected(false);
  focusOnMainWindow();
} //_CODE_:option6:508464:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:785638:
  //println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
  showThickAxies=(event.toString()=="SELECTED");
  focusOnMainWindow();
} //_CODE_:checkbox1:785638:

public void checkbox2_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox2:823634:
  //println("checkbox2 - GCheckbox >> GEvent." + event + " @ " + millis());
  showTeapot=(event.toString()=="SELECTED");
  focusOnMainWindow();
} //_CODE_:checkbox2:823634:

public void checkbox3_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox3:789607:
  //println("checkbox3 - GCheckbox >> GEvent." + event + " @ " + millis());
  showHello=(event.toString()=="SELECTED");
  focusOnMainWindow();
} //_CODE_:checkbox3:789607:

public void checkbox4_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox4:788481:
  //println("checkbox4 - GCheckbox >> GEvent." + event + " @ " + millis());
  showCrossHairs=(event.toString()=="SELECTED");
  focusOnMainWindow();
} //_CODE_:checkbox4:788481:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Movement: f, b, c, r, arrow_keys,  shift_arrow_keys");
  window1 = GWindow.getWindow(this, "GUI", 600, 220, 640, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  label1 = new GLabel(window1, 0, 20, 640, 20);
  label1.setText("My label");
  label1.setTextBold();
  label1.setOpaque(false);
  togGroup1 = new GToggleGroup();
  option1 = new GOption(window1, 100, 70, 160, 20);
  option1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option1.setText("at -X looking at 000");
  option1.setOpaque(false);
  option1.addEventHandler(this, "option1_clicked1");
  option2 = new GOption(window1, 260, 70, 160, 20);
  option2.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option2.setText("at +X looking toward 000");
  option2.setOpaque(false);
  option2.addEventHandler(this, "option2_clicked1");
  option3 = new GOption(window1, 100, 90, 160, 20);
  option3.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option3.setText("at -Y looking toward 000");
  option3.setOpaque(false);
  option3.addEventHandler(this, "option3_clicked1");
  option4 = new GOption(window1, 260, 90, 160, 20);
  option4.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option4.setText("at +Y looking at 000");
  option4.setOpaque(false);
  option4.addEventHandler(this, "option4_clicked1");
  option5 = new GOption(window1, 100, 110, 160, 20);
  option5.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option5.setText("at -Z looking at 000");
  option5.setOpaque(false);
  option5.addEventHandler(this, "option5_clicked1");
  option6 = new GOption(window1, 260, 110, 160, 20);
  option6.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  option6.setText("at +Z looking toward 000");
  option6.setOpaque(false);
  option6.addEventHandler(this, "option6_clicked1");
  togGroup1.addControl(option1);
  option1.setSelected(true);
  togGroup1.addControl(option2);
  togGroup1.addControl(option3);
  togGroup1.addControl(option4);
  togGroup1.addControl(option5);
  togGroup1.addControl(option6);
  label2 = new GLabel(window1, 90, 201, 389, 84);
  label2.setText("Camera location and orientation controlled with keyboard.\nMovement: f, b, c, r, arrow_keys, and shift_arrow_keys.\n \nXYZ speed: F1, F2 keys       Roll Pitch Yaw Speed: F3, F4 keys");
  label2.setTextBold();
  label2.setOpaque(false);
  checkbox1 = new GCheckbox(window1, 12, 151, 120, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setText("Show Thick Axies");
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  checkbox2 = new GCheckbox(window1, 11, 171, 120, 20);
  checkbox2.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox2.setText("Show Teapot");
  checkbox2.setOpaque(false);
  checkbox2.addEventHandler(this, "checkbox2_clicked1");
  checkbox2.setSelected(true);
  checkbox3 = new GCheckbox(window1, 161, 153, 120, 20);
  checkbox3.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox3.setText("Show Hello");
  checkbox3.setOpaque(false);
  checkbox3.addEventHandler(this, "checkbox3_clicked1");
  checkbox3.setSelected(true);
  checkbox4 = new GCheckbox(window1, 161, 171, 120, 20);
  checkbox4.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox4.setText("Show CrossHairs");
  checkbox4.setOpaque(false);
  checkbox4.addEventHandler(this, "checkbox4_clicked1");
  checkbox4.setSelected(true);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GLabel label1; 
GToggleGroup togGroup1; 
GOption option1; 
GOption option2; 
GOption option3; 
GOption option4; 
GOption option5; 
GOption option6; 
GLabel label2; 
GCheckbox checkbox1; 
GCheckbox checkbox2; 
GCheckbox checkbox3; 
GCheckbox checkbox4; 
